# -*- mode: snippet -*-
#
# key         : rec
# name        : [sboo] Define a record (i.e. product) « data »type.
# type        : snippet
# condition   : (let ((KEY "rec")) (condition-case nil (sboo-yas-column-p :key KEY :indentation 0) (void-function (= (current-column) (string-width KEY)))))
# expand-env  : ((yas-indent-line 'fixed) (yas-wrap-around-region 'nil))
# contributor : Spiros Boosalis <samboosalis@gmail.com> 
#
# --
--------------------------------------------------
--------------------------------------------------

{- | $0

-}

data ${1:T} = $1

  { ${2:x} :: ${4:()}
  , ${3:y} :: ${5:()}
  }

  deriving stock    (Show,Read,Eq,Ord)
  deriving stock    (Generic,Data,Lift)
  deriving anyclass (NFData,Hashable)

--------------------------------------------------

-- | @≡ 'default$1'@

instance Default $1 where def = default$1

--------------------------------------------------

{- |  -}

default$1 :: $1
default$1 = $1{..}
  where
  $2 = def
  $3 = def

$0