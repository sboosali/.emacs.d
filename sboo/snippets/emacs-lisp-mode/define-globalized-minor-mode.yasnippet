# -*- mode: snippet -*-
#
# key         : defminor/global
# name        : [sboo] Global Minor Mode, via « define-globalized-minor-mode ».
#
# type        : snippet
# condition   : (let ((KEY "defminor/global")) (condition-case nil (sboo-yas-column-p :key KEY :indentation 4) (void-function (= (current-column) (string-width KEY)))))
# expand-env  : ((yas-indent-line 'fixed) (yas-wrap-around-region 'nil))
#
# contributor : Spiros Boosalis <samboosalis@gmail.com> 
# commentary  : 
#
# --
;;----------------------------------------------;;
;; Mode ----------------------------------------;;
;;----------------------------------------------;;

(define-minor-mode ${2:`(condition-case _ (sboo-yas-get-elisp-namespace) ((error) "sboo"))`}-mode

  "."

  :lighter " foo"
  :keymap (let ((map (make-sparse-keymap)))
            (define-key map (kbd "C-c f") 'insert-foo)
            map)
  (make-local-variable 'foo-count))