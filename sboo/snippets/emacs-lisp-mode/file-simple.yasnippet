# -*- mode: snippet -*-
#
# key         : file-simple
# name        : [sboo] a (simple) « *.el » file.
# type        : snippet
# condition   : (let ((KEY "file-simple")) (condition-case nil (sboo-yasnippet-condition :key KEY :indentation 0) (void-function (= (current-column) (string-width KEY)))))
# expand-env  : ((yas-indent-line 'fixed) (yas-wrap-around-region 'nil)
# contributor : Spiros Boosalis <samboosalis@gmail.com> 
#
# --
;;; $1.el --- ${2:SYNOPSIS}
;;; -*- lexical-binding: t; -*-

;;==============================================;;
;; Copyright (C) GPL-3.0-or-later 2019 Spiros Boosalis

;; Author: Spiros Boosalis <samboosalis@gmail.com>
;; Maintainer: Spiros Boosalis <samboosalis@gmail.com>
;; Version: 0.0.0
;; URL: https://github.com/sboosali/.emacs.d
;; Keywords: 
;; Package-Requires: ((cl-lib "0.5") (emacs "25.1"))

;; This file is NOT part of GNU Emacs.

;;==============================================;;
;;; License

;; This file is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License
;; as published by the Free Software Foundation; either version 3
;; of the License, or (at your option) any later version.

;; This file is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this file; if not, write to the Free Software
;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
;; 02110-1301, USA.

;;==============================================;;
;;; Commentary:

;; $2.
;;
;; Commands provided:
;;
;; • \`$1-${3:get}'
;;
;; Variables provided:
;;
;; • \`$1-${4:default}'
;;
;; Bugs: https://github.com/sboosali/.emacs.d/issues
;;
;; History: https://github.com/sboosali/.emacs.d/blob/master/CHANGELOG.md
;;

;;==============================================;;
;;; Code:

;;----------------------------------------------;;
;;; Requirements -------------------------------;;
;;----------------------------------------------;;

(eval-when-compile

  (require 'cl-lib))

;;----------------------------------------------;;

(progn

  (require 'seq)
  (require 'subr-x)
  (require 'pcase))

;;----------------------------------------------;;
;;; Customization ------------------------------;;
;;----------------------------------------------;;

;;;###autoload
(defgroup $1 nil

  "$2."

  :link '(url-link :tag "GitHub" "https://github.com/sboosali/.emacs.d#readme")

  :prefix "$1-"
;;  :group '
  )

;;==============================================;;

(defcustom $1-${4:default}

  nil

  "Default.

a \`symbolp'."

  :type '(radio (const nil :tag "Disable")
                (const t   :tag "Enable "))

  :safe #'symbolp
  :group '$1)

;;----------------------------------------------;;
;;; Commands -----------------------------------;;
;;----------------------------------------------;;

(defun $1-$3 ()

  "."

  (interactive)

  (let* (
        )

    ()))

;;==============================================;;
(provide '$1)

;; Local Variables:
;; End:

;;; $1.el ends here