# -*- mode: snippet -*-
#
# key:         =config
# name:        a package configuration via « sboo-...-{init,config}! »
# condition:   (= (length "=config") (current-column))
# contributor: Spiros Boosalis
#
# --
;;; -*- lexical-binding: t -*-

;;; Commentary:

;; Configuration for \`$1'.

;;; Code:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Imports ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;(require '$1)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Definitions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; \`:init'

(defun ${7:`(condition-case _ (sboo-yas-get-elisp-namespace) ((error) "sboo"))`}-$1-init! ()

  "Initialize \`$1-mode' variables."  
  (interactive)

  ;(setq )
  ;; ^ 

  ;(setq )
  ;; ^ 

  ())

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; \`:config'

(defun ${7:`(condition-case _ (sboo-yas-get-elisp-namespace) ((error) "sboo"))`}-$1-config! ()

  "Configure \`$1-mode' and enable it."
  (interactive)

  ;($1-mode +1)

  ;; ^ $1.

  ())

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Notes ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; 
;; 
;; 
;;

;;; Links
;;
;;     - 
;;     - 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(provide 'sboo-$1)