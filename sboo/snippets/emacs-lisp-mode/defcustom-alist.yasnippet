# -*- mode: snippet -*-
#
# key         : defalist
# name        : a « defcustom » declaration for « (:alist ...) » types.
# condition   : (let ((KEY "defalist")) (condition-case nil (sboo-yas-column-p :key KEY :indentation 0) (void-function (= (current-column) (string-width KEY)))))
# expand-env  : ((yas-indent-line 'fixed) (yas-wrap-around-region 'nil))
# contributor : Spiros Boosalis <samboosalis@gmail.com> 
#
# --
;;----------------------------------------------;;

(defcustom ${7:`(condition-case _ (sboo-yas-get-elisp-namespace) ((error) "sboo"))`}-${1:name}-alist

  '( ("$4" . nil)
   )

  "$0.

Associates ${2:key}s with ${3:value}s."

  :type '(alist :key-type   (string :tag "$2")
                :value-type (choice (const nil)
                                    (string :tag "$3")))

  :safe #'listp
  :group '$7)

