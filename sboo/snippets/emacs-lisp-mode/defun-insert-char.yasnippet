# -*- mode: snippet -*-
#
# key         : definsert
# name        : a « defun » wrapping sboo-insert-char.
# type        : snippet
# expand-env  : ((yas-indent-line 'auto) (yas-wrap-around-region 'nil))
# condition   : (let ((KEY "definsert")) (condition-case nil (= (current-column) (string-width KEY)) (error t))) 
#
# --
;;----------------------------------------------;;

(defun sboo-insert-${1:$(string-join (split-string (downcase yas-text)) "-")} ()
  "`insert' ?${1:$(with-demoted-errors "[YASnippet] %s" (format "%c" (gethash yas-text (ucs-names))))}, the \\"${1:$$(progn (require 'mule) (require 'subr-x) (let ((CHAR-NAME (yas-choose-value (hash-table-keys (ucs-names))))) CHAR-NAME))}\\" Unicode character."
  (interactive)
  (insert-char ?${1:$(with-demoted-errors "[YASnippet] %s" (format "%c" (gethash yas-text (ucs-names))))}))
$0