# -*- mode: snippet -*-
#
# key         : file
# name        : [sboo] a (simple) « *.el » file.
# type        : snippet
# condition   : (let ((KEY "file")) (condition-case nil (sboo-yasnippet-condition :key KEY :indentation 0) (void-function (= (current-column) (string-width KEY)))))
# expand-env  : ((yas-indent-line 'fixed) (yas-wrap-around-region 'nil)
# contributor : Spiros Boosalis <samboosalis@gmail.com> 
#
# --
;;; $1.el --- ${2:SYNOPSIS}
;;; -*- lexical-binding: t; -*-

;;==============================================;;
;; Copyright (C) GPL-3.0-or-later 2019 Spiros Boosalis

;; Author: Spiros Boosalis <samboosalis@gmail.com>
;; Maintainer: Spiros Boosalis <samboosalis@gmail.com>
;; Version: 0.0.0
;; URL: https://github.com/sboosali/$1
;; Keywords:
;; Package-Requires: ((cl-lib "0.5") (pkg-info "0.4") (emacs "25.1"))

;; This file is NOT part of GNU Emacs.

;;==============================================;;
;;; License

;; This file is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License
;; as published by the Free Software Foundation; either version 3
;; of the License, or (at your option) any later version.

;; This file is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this file; if not, write to the Free Software
;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
;; 02110-1301, USA.

;;==============================================;;
;;; Commentary:

;; GNU Emacs major mode for $2.
;;
;; Usage: 
;;
;;   (progn (require '$1) ($1-$3))
;;
;; Installation: 
;;
;;   (use-package $1)
;;
;; Commands provided:
;;
;; • \`$1-${3:help}'
;; • \`$1-version'
;;
;; Variables provided:
;;
;; • \`$1-${4:default}'
;;
;; Bugs: https://github.com/sboosali/$1/issues
;;
;; History: https://github.com/sboosali/$1/blob/master/CHANGELOG.md
;;

;;==============================================;;
;;; Code:

;;----------------------------------------------;;
;;; Requirements -------------------------------;;
;;----------------------------------------------;;

(require 'cl-lib)
(require 'pcase)
(require 'seq)
(require 'subr-x)
(require 'pkg-info)

;;----------------------------------------------;;

(eval-when-compile
  (require 'rx))

;;----------------------------------------------;;
;;; Customization ------------------------------;;
;;----------------------------------------------;;

;;;###autoload
(defgroup $1 nil

  "$2."

  :link '(url-link :tag "GitHub" "https://github.com/sboosali/$1#readme")

  :prefix "$1-"
;;  :group '
  )

;;==============================================;;

(defcustom $1-default

  nil

  "Default.

a \`symbolp'."

  :type '(radio (const nil :tag "Disable")
                (const t   :tag "Enable "))

  :safe #'symbolp
  :group '$1)

;;----------------------------------------------;;
;;; Commands -----------------------------------;;
;;----------------------------------------------;;

(defun $1-$3 ()

  "."

  (interactive)

  (let* (
        )

    ()))

;;----------------------------------------------;;

(defun $1-version (&optional show-version)

  "Display string describing the version of BNF Mode.

If called interactively or if SHOW-VERSION is non-nil, show the
version in the Echo Area and the Messages Buffer.

The returned string includes both, the version from package.el
and the library version, if both are present and different.

If the version number could not be determined, signal an error
if called interactively or if SHOW-VERSION is non-nil, otherwise
just return nil."

  (interactive (list t))

  (let ((VERSION (pkg-info-version-info '$1))
        )

    (when show-version
      (message "%s (\`$1' version)" VERSION))
    VERSION))

;;==============================================;;
(provide '$1)

;; Local Variables:
;; End:

;;; $1.el ends here